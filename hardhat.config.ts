import '@nomicfoundation/hardhat-toolbox'
import '@openzeppelin/hardhat-upgrades'

import * as dotenv from 'dotenv'
import { HardhatUserConfig } from 'hardhat/config'
import { cleanEnv, str, testOnly } from 'envalid'

dotenv.config()

const {
  CONTRACT_OWNER_PRIVATE_KEY,
  ETH_RPC,
  ETH_RPC_MAINNET,
  ETHERSCAN_API_KEY,
} = cleanEnv(process.env, {
  CONTRACT_OWNER_PRIVATE_KEY: str({
    devDefault: testOnly(
      '0000000000000000000000000000000000000000000000000000000000000000'
    ),
  }),
  ETH_RPC: str(),
  ETH_RPC_MAINNET: str(),
  ETHERSCAN_API_KEY: str({ devDefault: testOnly('') }),
})

const config: HardhatUserConfig = {
  solidity: {
    version: '0.8.28',
    settings: {
      optimizer: {
        enabled: true,
        runs: 200,
      },
      outputSelection: {
        '*': {
          '*': ['storageLayout'],
        },
      },
    },
  },
  networks: {
    testnet: {
      url: ETH_RPC,
      accounts: [CONTRACT_OWNER_PRIVATE_KEY],
    },
    mainnet: {
      url: ETH_RPC_MAINNET,
      accounts: [CONTRACT_OWNER_PRIVATE_KEY],
    },
    local: {
      url: 'http://127.0.0.1:8545',
      accounts: [], // accounts private keys generated by the local node
    },
  },
  etherscan: {
    apiKey: ETHERSCAN_API_KEY,
    customChains: [
      {
        network: 'unichain',
        chainId: 1301,
        urls: {
          apiURL:
            'https://api.routescan.io/v2/network/testnet/evm/1301/etherscan',
          browserURL: 'https://testnet.uniexplorer.io',
        },
      },
      {
        network: 'mainnet',
        chainId: 130,
        urls: {
          apiURL: 'https://api.uniscan.xyz/api/',
          browserURL: 'https://uniscan.xyz',
        },
      },
    ],
  },
  typechain: {
    outDir: 'typechain',
  },
}

export default config
